"""your_migration_message

Revision ID: 83e4621c3178
Revises: 
Create Date: 2025-04-05 08:56:13.857842

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '83e4621c3178'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('captcha_challenges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=100), nullable=False),
    sa.Column('challenge', sa.Text(), nullable=False),
    sa.Column('solved', sa.Boolean(), nullable=True),
    sa.Column('solved_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='chrome_users'
    )
    op.create_index(op.f('ix_chrome_users_captcha_challenges_id'), 'captcha_challenges', ['id'], unique=False, schema='chrome_users')
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='chrome_users'
    )
    op.create_index(op.f('ix_chrome_users_roles_id'), 'roles', ['id'], unique=False, schema='chrome_users')
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('last_login_ip', sa.String(length=45), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('provider', sa.String(length=50), nullable=True),
    sa.Column('provider_user_id', sa.String(length=100), nullable=True),
    sa.Column('profile_picture_url', sa.Text(), nullable=True),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('verification_code', sa.String(length=10), nullable=True),
    sa.Column('verification_attempts', sa.Integer(), nullable=True),
    sa.Column('verification_code_sent_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('verification_code_expires_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('email_verified_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('requires_mfa', sa.Boolean(), nullable=True),
    sa.Column('mfa_secret', sa.Text(), nullable=True),
    sa.Column('mfa_app', sa.String(length=50), nullable=True),
    sa.Column('mfa_verified_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username'),
    schema='chrome_users'
    )
    op.create_index(op.f('ix_chrome_users_users_id'), 'users', ['id'], unique=False, schema='chrome_users')
    op.create_table('password_reset_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('token', sa.String(length=100), nullable=True),
    sa.Column('expires_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('used_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['chrome_users.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token'),
    schema='chrome_users'
    )
    op.create_index(op.f('ix_chrome_users_password_reset_tokens_id'), 'password_reset_tokens', ['id'], unique=False, schema='chrome_users')
    op.create_table('user_audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('performed_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['chrome_users.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='chrome_users'
    )
    op.create_index(op.f('ix_chrome_users_user_audit_logs_id'), 'user_audit_logs', ['id'], unique=False, schema='chrome_users')
    op.create_table('user_logins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('login_provider', sa.String(length=50), nullable=True),
    sa.Column('login_ip', sa.String(length=45), nullable=True),
    sa.Column('login_time', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['chrome_users.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='chrome_users'
    )
    op.create_index(op.f('ix_chrome_users_user_logins_id'), 'user_logins', ['id'], unique=False, schema='chrome_users')
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['chrome_users.roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['chrome_users.users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id'),
    schema='chrome_users'
    )
    op.create_table('user_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('device', sa.Text(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('login_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('expires_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('revoked_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['chrome_users.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='chrome_users'
    )
    op.create_index(op.f('ix_chrome_users_user_sessions_id'), 'user_sessions', ['id'], unique=False, schema='chrome_users')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_chrome_users_user_sessions_id'), table_name='user_sessions', schema='chrome_users')
    op.drop_table('user_sessions', schema='chrome_users')
    op.drop_table('user_roles', schema='chrome_users')
    op.drop_index(op.f('ix_chrome_users_user_logins_id'), table_name='user_logins', schema='chrome_users')
    op.drop_table('user_logins', schema='chrome_users')
    op.drop_index(op.f('ix_chrome_users_user_audit_logs_id'), table_name='user_audit_logs', schema='chrome_users')
    op.drop_table('user_audit_logs', schema='chrome_users')
    op.drop_index(op.f('ix_chrome_users_password_reset_tokens_id'), table_name='password_reset_tokens', schema='chrome_users')
    op.drop_table('password_reset_tokens', schema='chrome_users')
    op.drop_index(op.f('ix_chrome_users_users_id'), table_name='users', schema='chrome_users')
    op.drop_table('users', schema='chrome_users')
    op.drop_index(op.f('ix_chrome_users_roles_id'), table_name='roles', schema='chrome_users')
    op.drop_table('roles', schema='chrome_users')
    op.drop_index(op.f('ix_chrome_users_captcha_challenges_id'), table_name='captcha_challenges', schema='chrome_users')
    op.drop_table('captcha_challenges', schema='chrome_users')
    # ### end Alembic commands ###
